<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Document</title>
	<!-- CSS only -->
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
	 rel="stylesheet" 
	 integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" 
	 crossorigin="anonymous">
	 <style>
	 	.chatbox{
			 outline: 1px solid silver;
			 min-height: 160px;
			 padding : 0.5em
		 }
	</style>
</head>
<body>
	<div class="container">
		<div class="row">
			<div class="col">
				<h1 class="mt-3">Home page</h1>
				<hr>
			</div>
		</div>
		<div class="row">
			<div class="col-6 col-md-4">
				<p><a href="https://github.com">Got to git</a></p>
				chat
				<div class="form-group">
					<label for="username">Username:</label>
					<input type="text" name="username" id="username" class="form-control" autocomplete="off">
				</div>
				<div class="form-group">
					<label for="message">Message:</label>
					<input type="text" name="message" id="message" class="form-control" autocomplete="off">
				</div>

				<hr>
				<a href="javascript:void(0);" class="btn btn-outline-secondary" id="sendBth" >Send Message</a>

				<input type="hidden" name="action" id="action">

				<hr>
			<div id="output" class="chatbox">

			</div>
			</div>
			<div class="col-6 col-md-4">
				who is online
				<ul id="online_users"> </ul>
			</div>
		</div>
	</div>
</body>
	<script>
		let socket = null;
		let o = document.getElementById("output")
		let userField = document.getElementById("username")
		let messageField = document.getElementById("message")

		window.onbeforeunload = function(){
			console.log("leaving")
			let jsonData = {};
			jsonData["action"] = "left"
			socket.send(JSON.stringify(jsonData))
		}

		document.addEventListener("DOMContentLoaded", function(){
			socket = new WebSocket("ws://127.0.0.1:8080/ws");
			socket.onopen = ()=>{
				console.log("success connected")
			}

			socket.onclose = ()=>{
				console.log("conn close")
			}

			socket.onerror = error =>{
				console.log("error ")
			}

			socket.onmessage = msg => {
				// console.log(msg)
				// let j = JSON.parse(msg.data);
				// console.log(j);

				let data = JSON.parse(msg.data)
				console.log("action is  ", data.action)

				switch(data.action){
					case "list_users":
						let ul = document.getElementById("online_users");
						while(ul.firstChild) ul.removeChild(ul.firstChild);

						if(data.connected_users.length > 0){
							data.connected_users.forEach(function(item){
								let li = document.createElement("li");
								li.appendChild(document.createTextNode(item));
								ul.appendChild(li)
							})
						}

					break;
					case "broadcast":
						o.innerHTML = o.innerHTML + data.message + "<br>"
						break;

				}
			}

			let userInput = document.getElementById("username");
			username.addEventListener("change", function(){
				let jsonData = {}
				jsonData["action"] = "username";
				jsonData["username"] = this.value;
				socket.send(JSON.stringify(jsonData));
			})

			document.getElementById("message").addEventListener("keydown", function(event){
				if(event.code === "Enter"){
					if(!socket){
						console.log("no connection");
						return false;
					}
					event.preventDefault();
					event.stopPropagation();

					sendMessage();
				}
			})

			document.getElementById("sendBth").addEventListener("click", function(){
				if((userField.value === "")|| (messageField.value === "")){
					alert("fill out user and message")
					return false;
				}esle{
					sendMessage()
				}
			})

		})


		function sendMessage(){
			let jsonData = {};
			jsonData["action"] = "broadcast";
			jsonData["username"] = document.getElementById("username").value;
			jsonData["message"] = document.getElementById("message").value;

			socket.send(JSON.stringify(jsonData));

			document.getElementById("message").value = "";

		}
	</script>	
	<!-- JavaScript Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
	integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
	crossorigin="anonymous"></script>
</html>